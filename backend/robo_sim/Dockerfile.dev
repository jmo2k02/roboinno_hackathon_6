FROM robodk/robodk

# Set non-interactive mode (prevents prompts during installation)
ARG DEBIAN_FRONTEND=noninteractive

# Install required dependencies
RUN apt-get update && \
    apt-get install -y \
    wget \
    curl \
    bzip2 \
    ca-certificates \
    libssl-dev \
    libffi-dev \
    libreadline-dev \
    libbz2-dev \
    libsqlite3-dev \
    tk-dev \
    zlib1g-dev \
    liblzma-dev \
    libncurses5-dev \
    libgdbm-dev \
    libnss3-dev \
    libssl-dev \
    libsqlite3-dev \
    llvm \
    libncurses5 \
    libncursesw5 \
    xz-utils \
    git \
    make \
    gcc \
    g++ \
    -y && \
    apt-get clean

# Download and install Anaconda3
RUN wget https://repo.anaconda.com/archive/Anaconda3-2023.03-1-Linux-x86_64.sh -O /tmp/anaconda.sh && \
    bash /tmp/anaconda.sh -b -p /opt/anaconda3 && \
    rm -f /tmp/anaconda.sh

# Set environment variables for Anaconda
ENV PATH=/opt/anaconda3/bin:$PATH

# Set working directory
WORKDIR /app

# Copy the 'src' folder into the container's /app directory
COPY ./src /app/src

# Install dependencies
COPY environment.yml ./
RUN conda env create -f environment.yml

# Initialize conda and activate environment
RUN conda init bash
RUN echo "conda activate rtb" >> ~/.bashrc
ENV PATH /opt/conda/envs/rtb/bin:$PATH

# Ensure RoboDK executable permissions (if needed)
RUN chmod +x /app/src/robodk

EXPOSE 8001

# Set the entry point for the container
ENTRYPOINT ["conda", "run", "-n", "rtb", "python", "/app/src/main.py"]

